/* Element Chalk Variables */
@use "sass:math";
@use "sass:map";

@import '../mixins/config';

$--types: primary, success, warning, danger, error, info;

$--colors: () !default;
$--colors: map.merge(
  (
    'white': #ffffff,
    'black': #000000,
    'primary': (
      'base': #fb6638,
    ),
    'success': (
      'base': #67c23a,
    ),
    'warning': (
      'base': #e6a23c,
    ),
    'danger': (
      'base': #f56c6c,
    ),
    'error': (
      'base': #f56c6c,
    ),
    'info': (
      'base': #909399,
    ),
  ),
  $--colors
);

$--color-white: map.get($--colors, 'white') !default;
$--color-black: map.get($--colors, 'black') !default;
$--color-primary: map.get($--colors, 'primary', 'base') !default;
$--color-success: map.get($--colors, 'success', 'base') !default;
$--color-warning: map.get($--colors, 'warning', 'base') !default;
$--color-danger: map.get($--colors, 'danger', 'base') !default;
$--color-error: map.get($--colors, 'error', 'base') !default;
$--color-info: map.get($--colors, 'info', 'base') !default;


@mixin set-color-type-light($type, $number) {
  $--colors: map.deep-merge(
    (
      $type: (
        'light-#{$number}':
          mix(
            $--color-white,
            map.get($--colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          ),
      ),
    ),
    $--colors
  ) !global;
}

// $--colors.primary.light-i
// --lx-color-primary-light-i
// 10% 53a8ff
// 20% 66b1ff
// 30% 79bbff
// 40% 8cc5ff
// 50% a0cfff
// 60% b3d8ff
// 70% c6e2ff
// 80% d9ecff
// 90% ecf5ff
@for $i from 1 through 9 {
  @each $type in $--types {
    @include set-color-type-light($type, $i);
  }
}

/* Typography
-------------------------- */
$--font-path: 'fonts' !default;
$--font-display: 'auto' !default;

$--font-size: () !default;
$--font-size: map.merge(
  (
    'extra-large': 20px,
    'large': 18px,
    'medium': 16px,
    'base': 14px,
    'small': 13px,
    'extra-small': 12px,
  ),
  $--font-size
);

$--text-color: () !default;
$--text-color: map.merge(
  (
    'primary': #303133,
    'regular': #606266,
    'secondary': #909399,
    'placeholder': #c0c4cc,
  ),
  $--text-color
);

$--border-color: () !default;
$--border-color: map.merge(
  (
    'base': #dcdfe6,
    'light': #e4e7ed,
    'lighter': #ebeef5,
    'extra-light': #f2f6fc,
  ),
  $--border-color
);

$--background-color-base: #f5f7fa !default;

/* Border
-------------------------- */
$--border-width-base: 1px !default;
$--border-style-base: solid !default;
$--border-color-hover: var(--lx-text-color-placeholder) !default;
$--border-base: $--border-width-base $--border-style-base
  map.get($--border-color, 'base') !default;
/// borderRadius|1|Radius|0

$--border-radius: () !default;
$--border-radius: map.merge(
  (
    'base': 4px,
    'small': 2px,
    'round': 20px,
    'circle': 100%,
  ),
  $--border-radius
);


/* Button
-------------------------- */
// css3 var in packages/theme-chalk/src/button.scss
$--button: () !default;
$--button: map.merge(
  (
    'font-weight': var(--lx-font-weight-primary),
    'border-color': var(--lx-border-color-base),
    'background-color': var(--lx-color-white),
    'font-color': var(--lx-text-color-regular),
    'disabled-font-color': var(--lx-text-color-placeholder),
    'disabled-background-color': var(--lx-color-white),
    'disabled-border-color': var(--lx-border-color-light),
    'divide-border-color': rgba($--color-white, 0.5),
  ),
  $--button
);

$--button-hover-tint-percent: 20%;
$--button-active-shade-percent: 10%;

$--button-border-color: () !default;
$--button-background-color: () !default;
$--button-font-color: () !default;

$--button-font-size: () !default;
$--button-font-size: map.merge(
  (
    'default': var(--lx-font-size-base, map.get($--font-size, 'base')),
    'medium': var(--lx-font-size-base, map.get($--font-size, 'base')),
    'small': 12px,
    'mini': 12px,
  ),
  $--button-font-size
);

$--button-border-radius: () !default;
$--button-border-radius: map.merge(
  (
    'default': var(--lx-border-radius-base),
    'medium': var(--lx-border-radius-base),
    'small': calc(var(--lx-border-radius-base) - 1px),
    'mini': calc(var(--lx-border-radius-base) - 1px),
  ),
  $--button-border-radius
);

$--button-padding-vertical: () !default;
$--button-padding-vertical: map.merge(
  (
    'default': 12px,
    'medium': 10px,
    'small': 9px,
    'mini': 7px,
  ),
  $--button-padding-vertical
);

$--button-padding-horizontal: () !default;
$--button-padding-horizontal: map.merge(
  (
    'default': 20px,
    'medium': 20px,
    'small': 15px,
    'mini': 15px,
  ),
  $--button-padding-horizontal
);

@each $type in $--types {
  $--button-border-color: map.merge(
    (
      $type: map.get($--colors, $type, 'base'),
    ),
    $--button-border-color
  ) !global;

  $--button-background-color: map.merge(
    (
      $type: map.get($--colors, $type, 'base'),
    ),
    $--button-background-color
  ) !global;

  $--button-font-color: map.merge(
    (
      $type: map.get($--colors, 'white'),
    ),
    $--button-font-color
  ) !global;
}


$--input-height: () !default;
$--input-height: map.merge(
  (
    'default': 40px,
    'medium': 36px,
    'small': 32px,
    'mini': 28px,
  ),
  $--input-height
);